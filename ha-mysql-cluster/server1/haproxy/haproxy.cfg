global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

listen stats
    bind 10.10.10.11:9999
    stats enable
    stats hide-version
    stats uri /stats
    stats auth statadmin:statadminpass

listen mysql-cluster
    bind 10.10.10.11:3306
    mode tcp
    option mysql-check user haproxy_check
    balance roundrobin
    server mysql-1 192.168.15.4:3306 check
    server mysql-2 192.168.15.5:3306 check

listen web-cluster 
    bind 10.10.10.11:80
    bind 10.10.10.11:443 ssl crt /etc/ssl/my-cert/my.pem
    redirect scheme https if !{ ssl_fc }
    mode http
    balance roundrobin
    option forwardfor     
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    server web-1 192.168.15.4:80 check     
    server web-2 192.168.15.5:80 check
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

listen app-cluster
    bind 10.10.10.11:8080
    bind 10.10.10.11:8443 ssl crt /etc/ssl/my-cert/my.pem
    redirect scheme https if !{ ssl_fc }
    mode http
    balance roundrobin
    cookie JSESSIONID prefix nocache # Sticky session 
    option forwardfor  
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    server app-1 10.10.10.12:8080 check cookie s1
    server app-2 10.10.10.13:8080 check cookie s2
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }             